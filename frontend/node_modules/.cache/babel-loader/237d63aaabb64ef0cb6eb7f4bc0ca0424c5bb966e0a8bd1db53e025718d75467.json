{"ast":null,"code":"var _jsxFileName = \"/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/MealApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MealForm from './MealForm';\nimport MealTable from './MealTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealApp = () => {\n  _s();\n  const [mealData, setMealData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetchMealData = async userData => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/get-meal-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setMealData(data.meals);\n    } catch (error) {\n      setError(`Failed to fetch meal data: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSwapMeal = async (day, mealType) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/swap-meal', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          day,\n          mealType\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const newMeal = await response.json();\n      const updatedMeals = mealData.map(meal => meal.day === day && meal.mealType === mealType ? newMeal : meal);\n      setMealData(updatedMeals);\n    } catch (error) {\n      setError(`Failed to swap meal: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meal Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MealForm, {\n      onSubmit: fetchMealData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MealTable, {\n      meals: mealData,\n      onSwapMeal: handleSwapMeal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MealApp, \"9sgQI+XjLw1aSuu1M0gFXwbRlgc=\");\n_c = MealApp;\nexport default MealApp;\nvar _c;\n$RefreshReg$(_c, \"MealApp\");","map":{"version":3,"names":["React","useState","MealForm","MealTable","jsxDEV","_jsxDEV","MealApp","_s","mealData","setMealData","isLoading","setIsLoading","error","setError","fetchMealData","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","meals","message","handleSwapMeal","day","mealType","newMeal","updatedMeals","map","meal","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","onSwapMeal","_c","$RefreshReg$"],"sources":["/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/MealApp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MealForm from './MealForm';\nimport MealTable from './MealTable';\n\nconst MealApp = () => {\n  const [mealData, setMealData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchMealData = async (userData) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/get-meal-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setMealData(data.meals);\n    } catch (error) {\n      setError(`Failed to fetch meal data: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSwapMeal = async (day, mealType) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/swap-meal', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ day, mealType }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const newMeal = await response.json();\n      const updatedMeals = mealData.map((meal) =>\n        meal.day === day && meal.mealType === mealType ? newMeal : meal\n      );\n      setMealData(updatedMeals);\n    } catch (error) {\n      setError(`Failed to swap meal: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Meal Planner</h1>\n      <MealForm onSubmit={fetchMealData} />\n      {isLoading && <p>Loading...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <MealTable meals={mealData} onSwapMeal={handleSwapMeal} />\n    </div>\n  );\n};\n\nexport default MealApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,aAAa,GAAG,MAAOC,QAAQ,IAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClClB,WAAW,CAACiB,IAAI,CAACE,KAAK,CAAC;IACzB,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdC,QAAQ,CAAE,8BAA6BD,KAAK,CAACiB,OAAQ,EAAC,CAAC;IACzD,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmB,cAAc,GAAG,MAAAA,CAAOC,GAAG,EAAEC,QAAQ,KAAK;IAC9CrB,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAES,GAAG;UAAEC;QAAS,CAAC;MACxC,CAAC,CAAC;MAEF,IAAI,CAAChB,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMQ,OAAO,GAAG,MAAMjB,QAAQ,CAACW,IAAI,CAAC,CAAC;MACrC,MAAMO,YAAY,GAAG1B,QAAQ,CAAC2B,GAAG,CAAEC,IAAI,IACrCA,IAAI,CAACL,GAAG,KAAKA,GAAG,IAAIK,IAAI,CAACJ,QAAQ,KAAKA,QAAQ,GAAGC,OAAO,GAAGG,IAC7D,CAAC;MACD3B,WAAW,CAACyB,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,QAAQ,CAAE,wBAAuBD,KAAK,CAACiB,OAAQ,EAAC,CAAC;IACnD,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpC,OAAA,CAACH,QAAQ;MAACwC,QAAQ,EAAE5B;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpC/B,SAAS,iBAAIL,OAAA;MAAAgC,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC9B7B,KAAK,iBAAIP,OAAA;MAAGsC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAEzB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpC,OAAA,CAACF,SAAS;MAACyB,KAAK,EAAEpB,QAAS;MAACqC,UAAU,EAAEf;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAClC,EAAA,CAnEID,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAqEb,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}