{"ast":null,"code":"var _jsxFileName = \"/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/MealTable.js\";\nimport React from \"react\";\nimport \"./Meal.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealTable = ({\n  meals,\n  formData,\n  updateMeal\n}) => {\n  const groupByDay = meals => {\n    if (!meals || meals.length === 0) {\n      return {}; // Return an empty object if meals is undefined or empty\n    }\n    return meals.reduce((acc, meal) => {\n      if (!acc[meal.day]) {\n        acc[meal.day] = [];\n      }\n      acc[meal.day].push(meal);\n      return acc;\n    }, {});\n  };\n  const handleSwap = async meal => {\n    const otherMeals = meals.filter(ex => ex.day === meal.day && ex.meal !== meal.meal).map(ex => ex.meal);\n    try {\n      const response = await axios.post(\"http://localhost:8080/swap-meal\", {\n        meal: meal,\n        otherMeals: otherMeals,\n        dietPreference: formData.dietPreference,\n        allergies: formData.allergies\n      });\n      console.log(\"Swap response data:\", response.data); // Log the response data\n      const oldMealIndigredient = response.data.oldMealIndigredient;\n      const newMeal = response.data.newMeal;\n      updateMeal(meal.day, oldMealIndigredient, newMeal);\n    } catch (error) {\n      console.error(\"Error swapping meal:\", error);\n    }\n  };\n  const groupedMeals = groupByDay(meals);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nutrition(Approx.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(groupedMeals).map((day, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"day-header\",\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), groupedMeals[day].map((meal, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: meal.mealType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meal.ingredients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meal.instructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meal.nutrition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"swap-button\",\n                onClick: () => handleSwap(meal),\n                children: \"Swap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = MealTable;\nexport default MealTable;\nvar _c;\n$RefreshReg$(_c, \"MealTable\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","MealTable","meals","formData","updateMeal","groupByDay","length","reduce","acc","meal","day","push","handleSwap","otherMeals","filter","ex","map","response","post","dietPreference","allergies","console","log","data","oldMealIndigredient","newMeal","error","groupedMeals","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","index","Fragment","colSpan","idx","mealType","ingredients","instructions","nutrition","onClick","_c","$RefreshReg$"],"sources":["/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/MealTable.js"],"sourcesContent":["import React from \"react\";\nimport \"./Meal.css\";\nimport axios from \"axios\";\n\nconst MealTable = ({ meals, formData, updateMeal }) => {\n  const groupByDay = (meals) => {\n    if (!meals || meals.length === 0) {\n      return {}; // Return an empty object if meals is undefined or empty\n    }\n\n    return meals.reduce((acc, meal) => {\n      if (!acc[meal.day]) {\n        acc[meal.day] = [];\n      }\n      acc[meal.day].push(meal);\n      return acc;\n    }, {});\n  };\n\n  const handleSwap = async (meal) => {\n    const otherMeals = meals\n      .filter(\n        (ex) => ex.day === meal.day && ex.meal !== meal.meal\n      )\n      .map((ex) => ex.meal);\n\n    try {\n      const response = await axios.post(\"http://localhost:8080/swap-meal\", {\n        meal: meal,\n        otherMeals: otherMeals,\n        dietPreference: formData.dietPreference,\n        allergies: formData.allergies,\n      });\n      console.log(\"Swap response data:\", response.data); // Log the response data\n      const oldMealIndigredient = response.data.oldMealIndigredient;\n      const newMeal = response.data.newMeal;\n      updateMeal(meal.day, oldMealIndigredient, newMeal);\n    } catch (error) {\n      console.error(\"Error swapping meal:\", error);\n    }\n  };\n\n  const groupedMeals = groupByDay(meals);\n\n  return (\n    <div className=\"meal-table-container\">\n      <table className=\"meal-table\">\n        <thead>\n          <tr>\n            <th>Day</th>\n            <th>Meal</th>\n            <th>Ingredients</th>\n            <th>Instructions</th>\n            <th>Nutrition(Approx.)</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(groupedMeals).map((day, index) => (\n            <React.Fragment key={index}>\n              <tr className=\"day-header\">\n                <td colSpan=\"6\">{day}</td>\n              </tr>\n              {groupedMeals[day].map((meal, idx) => (\n                <tr key={idx}>\n                  <td>{meal.mealType}</td>\n                  <td>{meal.ingredients}</td>\n                  <td>{meal.instructions}</td>\n                  <td>{meal.nutrition}</td>\n                  <td>\n                    <button\n                      className=\"swap-button\"\n                      onClick={() => handleSwap(meal)}\n                    >\n                      Swap\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default MealTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}