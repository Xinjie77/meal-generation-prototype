{"ast":null,"code":"var _jsxFileName = \"/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/DietTable.js\";\nimport React from \"react\";\nimport \"./Exercise.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseTable = ({\n  exercises,\n  formData,\n  updateExercise\n}) => {\n  const groupByDay = exercises => {\n    return exercises.reduce((acc, exercise) => {\n      if (!acc[exercise.day]) {\n        acc[exercise.day] = [];\n      }\n      acc[exercise.day].push(exercise);\n      return acc;\n    }, {});\n  };\n  const handleSwap = async exercise => {\n    const otherExercises = exercises.filter(ex => ex.day === exercise.day && ex.exercise !== exercise.exercise).map(ex => ex.exercise);\n    try {\n      const response = await axios.post(\"http://localhost:8080/swap-exercise\", {\n        exercise: exercise,\n        otherExercises: otherExercises,\n        exercisePreference: formData.exercisePreference,\n        equipmentAccess: formData.equipmentAccess\n      });\n      console.log(\"Swap response data:\", response.data); // Log the response data\n      const oldExerciseName = response.data.oldExerciseName;\n      const newExercise = response.data.newExercise;\n      updateExercise(exercise.day, oldExerciseName, newExercise);\n    } catch (error) {\n      console.error(\"Error swapping exercise:\", error);\n    }\n  };\n  const groupedExercises = groupByDay(exercises);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"exercise-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progression Strategy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(groupedExercises).map((day, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"day-header\",\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), groupedExercises[day].map((exercise, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exercise.exercise\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exercise.sets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exercise.reps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exercise.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exercise.progression\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"swap-button\",\n                onClick: () => handleSwap(exercise),\n                children: \"Swap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = ExerciseTable;\nexport default ExerciseTable;\nvar _c;\n$RefreshReg$(_c, \"ExerciseTable\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","ExerciseTable","exercises","formData","updateExercise","groupByDay","reduce","acc","exercise","day","push","handleSwap","otherExercises","filter","ex","map","response","post","exercisePreference","equipmentAccess","console","log","data","oldExerciseName","newExercise","error","groupedExercises","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","index","Fragment","colSpan","idx","sets","reps","weight","progression","onClick","_c","$RefreshReg$"],"sources":["/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/DietTable.js"],"sourcesContent":["import React from \"react\";\nimport \"./Exercise.css\";\nimport axios from \"axios\";\n\nconst ExerciseTable = ({ exercises, formData, updateExercise }) => {\n  const groupByDay = (exercises) => {\n    return exercises.reduce((acc, exercise) => {\n      if (!acc[exercise.day]) {\n        acc[exercise.day] = [];\n      }\n      acc[exercise.day].push(exercise);\n      return acc;\n    }, {});\n  };\n\n  const handleSwap = async (exercise) => {\n    const otherExercises = exercises\n      .filter(\n        (ex) => ex.day === exercise.day && ex.exercise !== exercise.exercise\n      )\n      .map((ex) => ex.exercise);\n\n    try {\n      const response = await axios.post(\"http://localhost:8080/swap-exercise\", {\n        exercise: exercise,\n        otherExercises: otherExercises,\n        exercisePreference: formData.exercisePreference,\n        equipmentAccess: formData.equipmentAccess,\n      });\n      console.log(\"Swap response data:\", response.data); // Log the response data\n      const oldExerciseName = response.data.oldExerciseName;\n      const newExercise = response.data.newExercise;\n      updateExercise(exercise.day, oldExerciseName, newExercise);\n    } catch (error) {\n      console.error(\"Error swapping exercise:\", error);\n    }\n  };\n\n  const groupedExercises = groupByDay(exercises);\n\n  return (\n    <div className=\"exercise-table-container\">\n      <table className=\"exercise-table\">\n        <thead>\n          <tr>\n            <th>Exercise</th>\n            <th>Sets</th>\n            <th>Reps</th>\n            <th>Weight</th>\n            <th>Progression Strategy</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(groupedExercises).map((day, index) => (\n            <React.Fragment key={index}>\n              <tr className=\"day-header\">\n                <td colSpan=\"6\">{day}</td>\n              </tr>\n              {groupedExercises[day].map((exercise, idx) => (\n                <tr key={idx}>\n                  <td>{exercise.exercise}</td>\n                  <td>{exercise.sets}</td>\n                  <td>{exercise.reps}</td>\n                  <td>{exercise.weight}</td>\n                  <td>{exercise.progression}</td>\n                  <td>\n                    <button\n                      className=\"swap-button\"\n                      onClick={() => handleSwap(exercise)}\n                    >\n                      Swap\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ExerciseTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}