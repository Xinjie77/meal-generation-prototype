{"ast":null,"code":"var _jsxFileName = \"/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/DietApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport DietForm from \"./DietForm\";\nimport \"./Diet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DietApp = () => {\n  _s();\n  const [dietData, setDietData] = useState([]);\n  const [bmi, setBMI] = useState(0);\n  const [caloricIntake, setCaloricIntake] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    gender: \"Male\",\n    unit: \"metric\",\n    height: 180,\n    weight: 75,\n    primaryPurpose: \"Lose Weight\",\n    mealsPerDay: 3,\n    snacksPerDay: 2,\n    dietPreference: \"Vegetarian\",\n    allergy: \"None\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n\n    // Convert height to cm and weight to kg if using imperial units\n    let height = parseFloat(formData.height);\n    let weight = parseFloat(formData.weight);\n    if (formData.unit === \"imperial\") {\n      height = parseFloat(formData.heightFeet || 0) * 30.48 + parseFloat(formData.heightInches || 0) * 2.54;\n      weight = parseFloat(formData.weightPounds) / 2.20462;\n    }\n    const convertedData = {\n      ...formData,\n      height: height,\n      weight: weight,\n      mealsPerDay: parseInt(formData.mealsPerDay, 10),\n      snacksPerDay: parseInt(formData.snacksPerDay, 10)\n    };\n    console.log(\"Form data:\", convertedData);\n    try {\n      var _response$data$bmi;\n      const response = await axios.post(\"http://localhost:8080/get-meal-data\", convertedData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Response data:\", response.data);\n      setDietData(response.data.dietPlan);\n      setBMI((_response$data$bmi = response.data.bmi) !== null && _response$data$bmi !== void 0 ? _response$data$bmi : 0);\n      setCaloricIntake(response.data.calories);\n    } catch (error) {\n      console.error(\"Error fetching diet data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Diet Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DietForm, {\n      formData: formData,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [bmi !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-label\",\n        children: [\"BMI: \", bmi.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }, this), caloricIntake !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-label\",\n        children: [\"Caloric Intake: \", caloricIntake.toFixed(2), \" kcal/day\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), dietData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diet-plan\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Diet Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dietData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(DietApp, \"2Dk1525Bk4ZHJcDzlHRknVM03AA=\");\n_c = DietApp;\nexport default DietApp;\nvar _c;\n$RefreshReg$(_c, \"DietApp\");","map":{"version":3,"names":["React","useState","axios","DietForm","jsxDEV","_jsxDEV","DietApp","_s","dietData","setDietData","bmi","setBMI","caloricIntake","setCaloricIntake","loading","setLoading","formData","setFormData","gender","unit","height","weight","primaryPurpose","mealsPerDay","snacksPerDay","dietPreference","allergy","handleChange","e","name","value","target","handleSubmit","event","preventDefault","parseFloat","heightFeet","heightInches","weightPounds","convertedData","parseInt","console","log","_response$data$bmi","response","post","headers","data","dietPlan","calories","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","length","map","item","index","_c","$RefreshReg$"],"sources":["/Users/xinjie/Desktop/exercise-generation-prototype-main/frontend/src/DietApp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport DietForm from \"./DietForm\";\nimport \"./Diet.css\";\n\nconst DietApp = () => {\n  const [dietData, setDietData] = useState([]);\n  const [bmi, setBMI] = useState(0);\n  const [caloricIntake, setCaloricIntake] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    gender: \"Male\",\n    unit: \"metric\",\n    height: 180,\n    weight: 75,\n    primaryPurpose: \"Lose Weight\",\n    mealsPerDay: 3,\n    snacksPerDay: 2,\n    dietPreference: \"Vegetarian\",\n    allergy: \"None\"\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    // Convert height to cm and weight to kg if using imperial units\n    let height = parseFloat(formData.height);\n    let weight = parseFloat(formData.weight);\n    if (formData.unit === \"imperial\") {\n      height =\n        parseFloat(formData.heightFeet || 0) * 30.48 +\n        parseFloat(formData.heightInches || 0) * 2.54;\n      weight = parseFloat(formData.weightPounds) / 2.20462;\n    }\n\n    const convertedData = {\n      ...formData,\n      height: height,\n      weight: weight,\n      mealsPerDay: parseInt(formData.mealsPerDay, 10),\n      snacksPerDay: parseInt(formData.snacksPerDay, 10),\n    };\n\n    console.log(\"Form data:\", convertedData);\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/get-meal-data\",\n        convertedData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(\"Response data:\", response.data);\n      setDietData(response.data.dietPlan);\n      setBMI(response.data.bmi ?? 0);\n      setCaloricIntake(response.data.calories);\n    } catch (error) {\n      console.error(\"Error fetching diet data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Diet Plan</h1>\n      <DietForm\n        formData={formData}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        loading={loading}\n      />\n      <div className=\"results\">\n        {bmi !== 0 && <p className=\"result-label\">BMI: {bmi.toFixed(2)}</p>}\n        {caloricIntake !== 0 && (\n          <p className=\"result-label\">\n            Caloric Intake: {caloricIntake.toFixed(2)} kcal/day\n          </p>\n        )}\n      </div>\n      {dietData.length > 0 && (\n        <div className=\"diet-plan\">\n          <h2>Your Diet Plan</h2>\n          <ul>\n            {dietData.map((item, index) => (\n              <li key={index}>{item}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DietApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}